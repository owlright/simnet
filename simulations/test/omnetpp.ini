[General]
repeat = 1
sim-time-limit = 10s
**.param-recording = false
**.vector-recording = false
**.scalar-recording = false
**.queue[*].ecnThreshold = 50

[Config FlowDistribution]
**.sender[*].app.typename = "FlowApp"
**.sender[*].app.flowLengthMean = cdf_mean("FbHdp_distribution")
**.sender[*].app.flowLength = cdf("FbHdp_distribution")
**.sender[*].app.load = 0.5

[congAlgo]
repeat = 10
network = simnet.simulations.networks.Dumbbell
**.sender[*].fct:vector.vector-recording = true
**.sender[*].idealFct:vector.vector-recording = true
**.sender[*].flowSize:vector.vector-recording = true
**.sender[*].apps[0].cong.cwnd:vector.vector-recording = true
**.LR.queue[*].qlen:vector.vector-recording = true

**.cong.typename = "Dctcp"
**.numApps = 1
**.numberFlows = 8
**.sender[*].apps[*].typename = "FlowApp"
**.sink[*].apps[*].typename = "EchoApp"
**.sender[*].apps[*].flowSize = 1MB
**.sender[0].apps[*].destAddress = 0
**.sender[1].apps[*].destAddress = 1
**.sender[2].apps[*].destAddress = 2
**.sender[3].apps[*].destAddress = 3
**.sender[4].apps[*].destAddress = 4
**.sender[5].apps[*].destAddress = 5
**.sender[6].apps[*].destAddress = 6
**.sender[7].apps[*].destAddress = 7
 
[uniformTraffic]
repeat = 10
network = simnet.simulations.networks.FatTree
**.apps[1..].fct:vector.vector-recording = true
**.apps[1..].idealFct:vector.vector-recording = true
**.apps[1..].flowSize:vector.vector-recording = true
**.ecmpFlow = true
**.tpManager.trafficPattern = "uniform"
**.numApps = 1
**.apps[0].typename = "UnicastEchoApp"

**.load = ${load=0.1..0.9 step 0.1}
**.flowSizeMean = cdf_mean("FbHdp_distribution")
**.apps[1..].flowSize= cdf("FbHdp_distribution")
**.numFlows = 10

**.k = 4
**.*.apps[0].typename = "UnicastEchoApp"

[onlyOneAggGroup]
network = simnet.simulations.networks.FatTree
#**.metricCollector.job-*-RoundFinishTime:vector.vector-recording = true
#**.apps[1..].fct:vector.vector-recording = true
#**.apps[1..].idealFct:vector.vector-recording = true
#**.apps[1..].flowSize:vector.vector-recording = true

**.ecmpFlow = true
**.k = 4
**.load = 0.0
**.hosts[*].flowSizeMean = cdf_mean("FbHdp_distribution")
**.hosts[*].apps[*].flowSize = cdf("FbHdp_distribution")
**.tpManager.trafficPattern = "uniform"
**.numApps = 1
**.apps[0].typename = "UnicastEchoApp"
**.workers[*].flowSize = 1kB
**.workers[*].numRounds = 1
**.groupManager.placementPolicy = "random"
**.groupManager.aggTreeType = "edge"
**.groupManager.numGroups = 1
**.groupManager.numWorkers = 3

[collisionAndCongestion]
network = simnet.simulations.networks.SpineLeafNetwork
#**.metricCollector.job-*-RoundFinishTime:vector.vector-recording = true
#**.apps[1..].fct:vector.vector-recording = true
#**.apps[1..].idealFct:vector.vector-recording = true
#**.apps[1..].flowSize:vector.vector-recording = true
SpineLeafNetwork.spineNumber = 2
SpineLeafNetwork.podNumber = 2
SpineLeafNetwork.hostNumber = 4
SpineLeafNetwork.bandwidth = 100Gbps
SpineLeafNetwork.linkDelay = 2.25us
SpineLeafNetwork.pods[*].bandwidth = 25Gbps
SpineLeafNetwork.pods[*].linkDelay = 2.25us

**.ecmpFlow = true

**.load = 0.0
**.hosts[*].flowSizeMean = cdf_mean("FbHdp_distribution")
**.hosts[*].apps[*].flowSize = cdf("FbHdp_distribution")
**.tpManager.trafficPattern = "uniform"
**.numApps = 1
**.apps[0].typename = "UnicastEchoApp"
**.maxDisorderNumber = 5
**.workers[*].flowSize = 1000kB
**.workers[*].numRounds = 1
**.groupManager.placementPolicy = "random"
**.groupManager.aggTreeType = "sptree"
**.groupManager.numGroups = 2
**.groupManager.numWorkers = 3