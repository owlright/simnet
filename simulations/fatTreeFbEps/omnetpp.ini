[General]
repeat = 4
seed-set = ${repetition}+2023
sim-time-limit = ${simtime=1.2s, 0.40s, 0.24s, 0.17s, 1s ! load}
**.param-recording = false
**.vector-recording = false
**.scalar-recording = false
**.queue[*].ecnThreshold = 50
**.metricCollector.showProgressInfo = true
**.metricCollector.progressInterval = 30 # every 10 seconds

[fatTreeFbEps]
network = simnet.simulations.networks.FatTree
*.fct:vector.vector-recording = true
*.idealFct:vector.vector-recording = true
*.flowSize:vector.vector-recording = true
*.jobRCT:vector.vector-recording = true
#**.workers[*].cwnd:vector.vector-recording = true
#**.routing.bufferInUse:vector.vector-recording = true
**.queue[*].qlen:vector.vector-recording = true
**.cong.typename = "Dctcp"
**.linkBW = 10Gbps
**.ecmpFlow = true
**.k = 12
**.maxAgtrNum = 0
**.maxDisorderNumber = 100 # set this to a big number to avoid resend
**.cong.initWinSize = 10kB
**.tpManager.trafficPattern = "uniform"

**.hosts[*].numFlows = 0 # each host maximum send flows number, 0 silent, -1 infinity
**.hosts[*].load = ${load=0.1, 0.3, 0.5, 0.7, 0.9}
**.hosts[*].flowSizeMean = 20B+cdf_mean("FbHdp_distribution")
**.hosts[*].numApps = 1
**.hosts[*].apps[*].flowSize = 20B+cdf("FbHdp_distribution")
**.hosts[*].apps[0].typename = "EchoApp"

**.workers[*].flowSize = 10MB
**.workers[*].numRounds = 20
**.workers[*].load = .9
**.pses[*].messageLength = 64B
**.groupManager.placementPolicy = "random"
**.groupManager.aggTreeType = ${aggPolicy = "sptree"}
**.groupManager.numGroups = 1
**.groupManager.numWorkers = 35
**.groupManager.costThreshold = ${epsion=0.0,1.0}