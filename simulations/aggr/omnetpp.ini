[General]
#debug-on-errors = true
#record-eventlog = true
#eventlog-message-detail-pattern = Packet:declaredOn(Packet) or bitLength
#eventlog-message-detail-pattern = *
**.vector-recording = false
**.scalar-recording = false
**.bin-recording = false
**.app.typename = "FlowApp"

num-rngs=3

#[Nto1]
#network = range.networks.Nto1
#sim-time-limit = 20ms
#**.numberOfSenders = 4
#**.ecnThreshold = 20
#**.sender[*].app.socket.cwnd:vector.vector-recording = true
#**.sender[*].queue[*].qlen:vector.vector-recording=true
#**.gate.queue[0].qlen:vector.vector-recording=true

[AggrGroup]
network = range.networks.AggrDumbell
sim-time-limit = 20ms
**.aggressive = true
**.ecnThreshold = 50

**.group1[*].socket.rng-0 = 0
**.group2[*].socket.rng-0 = 1
**.group1[*].app.socket.cwnd:vector.vector-recording = true
**.group1[*].app.socket.rtt:vector.vector-recording = true
#**.group1[*].queue[*].qlen:vector.vector-recording=true
**.group2[*].app.socket.cwnd:vector.vector-recording = true
**.group2[*].app.socket.rtt:vector.vector-recording = true
#**.aggr1.queue[2].qlen:vector.vector-recording = true
**.aggr2.queue[4].qlen:vector.vector-recording=true
**.gate.queue[*].qlen:vector.vector-recording=true
**.controller.aggrGroupPlacePolicy = "manual"
**.app.destAddress = -1
**.app.groupAddress = -2
*.controller.aggSenders = [[0, 1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]]
*.controller.aggRouters =  [[100], [200]]
*.controller.aggMaxBufferSize = [[8], [8]]
*.controller.aggFanInDegree = [[8], [16]]
*.controller.targets = [40, 41]

[AggrNto1]
network = range.networks.AggrNto1
sim-time-limit = 20ms
**.aggressive = true
**.ecnThreshold = 50
*.numberOfSenders = 8
#**.group1[*].socket.rng-0 = 0
#**.group2[*].socket.rng-0 = 1
**.sender[*].app.socket.cwnd:vector.vector-recording = true
**.sender[*].app.socket.rtt:vector.vector-recording = true
#**.group1[*].queue[*].qlen:vector.vector-recording=true
#**.group2[*].app.socket.cwnd:vector.vector-recording = true
#**.group2[*].app.socket.rtt:vector.vector-recording = true
#**.group2[*].queue[*].qlen:vector.vector-recording=true
#**.aggr1.queue[2].qlen:vector.vector-recording = true
#**.aggr2.queue[4].qlen:vector.vector-recording=true
**.gate.queue[*].qlen:vector.vector-recording=true
**.controller.aggrGroupPlacePolicy = "manual"
**.app.destAddress = -1
**.app.groupAddress = -2
*.controller.aggSenders = [[0, 1, 2, 3, 4, 5, 6, 7]]
*.controller.aggRouters =  [[666]]
*.controller.aggMaxBufferSize = [[8]]
*.controller.aggFanInDegree = [[8]]
*.controller.targets = [8]

[AggrRace]
# test aggregation protocol grab bandwidth
network = range.networks.AggrIncast
sim-time-limit = 20ms
**.routing.dataRate.throughput.interval = 1ms

**.aggressive = false
**.ecnThreshold = 40
**.group1[*].socket.rng-0 = 0
**.group2[*].socket.rng-0 = 1
**.group1[*].app.socket.cwnd:vector.vector-recording = true
**.group1[*].app.socket.rtt:vector.vector-recording = true
**.group1[*].routing.dataRate:vector.vector-recording = true
#**.group1[*].queue[*].qlen:vector.vector-recording=true
**.group2[*].app.socket.cwnd:vector.vector-recording = true
**.group2[*].app.socket.rtt:vector.vector-recording = true
**.group2[*].routing.dataRate:vector.vector-recording = true
#**.group2[*].queue[*].qlen:vector.vector-recording=true
**.gate.queue[*].qlen:vector.vector-recording=true
*.controller.aggrouter =  [[30], [30]]
*.controller.aggrbuffer = [[8], [8]]
*.controller.aggrnumber = [[2], [8]]
*.controller.targets = [40, 41]

[BinaryTree]
# test aggregation protocol's routing
network = range.networks.BinaryTree
**.height = 3 # 2^height terminals
# these nodes are routers
**.terminal[0..2].appType = "Buffer"
**.terminal[7].app.destAddress = -1

# rest nodes are hosts
**.terminal[*].app.destAddress = 7
**.terminal[*].app.groupAddress = 7
**.controller.aggrouter = [[0, 1, 2]]
**.controller.aggrbuffer = [[1, 1, 1]]
**.controller.aggrnumber = [[2, 2, 2]]
**.controller.targets = [7]
**.packetTotalCount = 10
**.sendIaTime = 1s
**.ecnThreshold = 10

[Dumbbell]
network = range.networks.Dumbbell
sim-time-limit = 20ms
**.numberFlows = 1

**.routing.dataRate.throughput.interval = 500us
#**.sender[0].queue[*].qlen:vector.vector-recording=true
#**.sender[0].queue[*].congestion:vector.vector-recording=true
**.sender[*].**.cong.*.vector-recording = true
**.sender[*].app.socket.cwnd:vector.vector-recording = true

**.sender[*].queue[*].qlen:vector.vector-recording=true
**.LR.queue[*].qlen:vector.vector-recording=true
**.LR.queue[*].congestion:vector.vector-recording=true
#**.sender[0].queue[*].qlen.result-recording-modes = +vector

#**.queue[*].qlen.result-recording-modes = +vector  # default plus vector
#**.congestion[*].result-recording-modes = +vector  # default plus vector
**.ecnThreshold = 10

#**.result-recording-modes = all  # turn on recording of optional vectors
#**.frameCapacity = 10

[NetBuilder]
network = range.networks.Dynamic
**.address = int(replace(fullName(), "rte", ""))
**.destAddresses = "1 50"
